{"version":3,"file":"static/js/987.70278cad.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js","styles/GlobalStyle.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filters;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { Box, Button, TextField } from '@mui/material';\n\nexport const ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSubmit();\n\n    const isExistingContact = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isExistingContact) {\n      alert(`${name} вже є в контактах.`);\n      setName('');\n      setNumber('');\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        throw new Error(`Тип поля - ${name} не обробляється`);\n    }\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onSubmit={handleSubmit}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n        width: '300px',\n        margin: '40px auto',\n      }}\n    >\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleChange}\n        fullWidth\n      />\n      <TextField\n        label=\"Number\"\n        variant=\"outlined\"\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleChange}\n        fullWidth\n      />\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        fullWidth\n        disabled={!(name && number)}\n      >\n        Add contact\n      </Button>\n    </Box>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filtersSlice';\nimport { Box, TextField } from '@mui/material';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      onChange={handleChange}\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        gap: 2,\n        width: '300px',\n        margin: '28px auto',\n      }}\n    >\n      <TextField\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        type=\"email\"\n        value={filter}\n        name=\"email\"\n        fullWidth\n      />\n    </Box>\n  );\n};\n","import React from 'react';\nimport { ListItem, ListItemText, IconButton } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nexport const ContactListItem = ({\n  contact: { id, name, number },\n  onDelete,\n}) => {\n  return (\n    <ListItem>\n      <ListItemText primary={name} secondary={number} />\n      <IconButton edge=\"end\" color=\"secondary\" onClick={() => onDelete(id)}>\n        <DeleteIcon />\n      </IconButton>\n    </ListItem>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n} from '../../redux/contacts/selectors';\nimport { deleteContact, fetchContacts } from '../../redux/contacts/operations';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { List, Box, CircularProgress } from '@mui/material';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filteredContacts = getFilteredContacts();\n\n  return (\n    <Box>\n      {isLoading && <CircularProgress />}\n      {!isLoading && (\n        <List>\n          {filteredContacts.map(contact => (\n            <ContactListItem\n              key={contact.id}\n              contact={contact}\n              onDelete={handleDelete}\n            />\n          ))}\n        </List>\n      )}\n    </Box>\n  );\n};\n","import { Box, IconButton } from '@mui/material';\nimport { AddCircle } from '@mui/icons-material';\nimport ContactPhoneIcon from '@mui/icons-material/ContactPhone';\nimport { useState } from 'react';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { GlobalStyle } from '../styles/GlobalStyle';\n\nexport default function Contacts() {\n  const [showForm, setShowForm] = useState(false);\n\n  const handleOnClick = () => {\n    setShowForm(true);\n  };\n\n  const handleFormSubmit = () => {\n    setShowForm(false);\n  };\n\n  return (\n    <div>\n      <Filter />\n      {!showForm && (\n        <IconButton onClick={handleOnClick} color=\"primary\" size=\"large\">\n          <AddCircle fontSize=\"inherit\" />\n        </IconButton>\n      )}\n      {showForm && <ContactForm onSubmit={handleFormSubmit} />}\n      <Box sx={{ display: 'flex', alignItems: 'center' }}>\n        <ContactPhoneIcon sx={{ fontSize: '1rem', marginRight: '0.5rem' }} />\n        <h4>Contacts</h4>\n      </Box>\n      <ContactList />\n      <GlobalStyle />\n    </div>\n  );\n}\n","import { createGlobalStyle } from 'styled-components';\nimport 'modern-normalize';\n\nexport const GlobalStyle = createGlobalStyle`\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  padding: 60px;\n  font-size: 20px;\n  background-color: #F5F5F5;\n  p {\n    margin: 0;\n  }\n\n  ul{\n    margin: 0;\n  }\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n`;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filters","createSelector","filter","contact","name","toLowerCase","includes","ContactForm","_ref","onSubmit","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","number","setNumber","dispatch","useDispatch","useSelector","handleChange","event","_event$target","target","value","Error","concat","_jsxs","Box","component","preventDefault","some","alert","addContact","sx","display","flexDirection","gap","width","margin","children","_jsx","TextField","label","variant","type","onChange","fullWidth","Button","color","disabled","Filter","setFilter","ContactListItem","_ref$contact","id","onDelete","ListItem","ListItemText","primary","secondary","IconButton","edge","onClick","DeleteIcon","ContactList","useEffect","fetchContacts","handleDelete","deleteContact","filteredContacts","CircularProgress","List","map","Contacts","showForm","setShowForm","size","AddCircle","fontSize","alignItems","ContactPhoneIcon","marginRight","GlobalStyle","createGlobalStyle","_templateObject","_taggedTemplateLiteral"],"sourceRoot":""}